!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.morphologycorejs={})}(this,function(e){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function s(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}var c=function(){function t(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null;n(this,t),this._id=null,this._parent=null,this._children=[],this._typename=null,this._typevalue=null,this._points=null,this._radiuses=null,this._morphology=e,this._typevalueToTypename={0:"undefined",1:"soma",2:"axon",3:"basal_dendrite",4:"apical_dendrite",5:"custom"},this._typenameToTypevalue={undefined:0,soma:1,axon:2,basal_dendrite:3,apical_dendrite:4,custom:5}}return s(t,[{key:"setId",value:function(e){this._id=e}},{key:"getId",value:function(){return this._id}},{key:"setTypename",value:function(e){e in this._typenameToTypevalue?(this._typename=e,this._typevalue=this._typenameToTypevalue[e]):console.warn("The typename must be one of "+Object.key(this._typenameToTypevalue).join(" "))}},{key:"getTypename",value:function(){return this._typename}},{key:"setTypeValue",value:function(e){this._typevalue=e}},{key:"getTypevalue",value:function(){return this._typevalue}},{key:"addPoint",value:function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;this._points.push([e,t,n]),this._radiuses.push(i)}},{key:"getPoints",value:function(){return this._points}},{key:"getRadiuses",value:function(){return this._radiuses}},{key:"initWithRawSection",value:function(e){return this._id=e.id,this._points=e.points.map(function(e){return e.position}),this._radiuses=e.points.map(function(e){return e.radius}),(e.typename||e.typevalue)&&(this._typename=e.typename||this._typevalueToTypename[e.typevalue],this._typevalue=e.typevalue||this._typenameToTypevalue[e.typename]),this._id}},{key:"setParent",value:function(e){return e&&e.getId()!==this._id?(this._parent=e,!0):(console.warn("A section cannot be the parent of itself."),!1)}},{key:"getParent",value:function(){return this._parent}},{key:"addChild",value:function(e){return e.getId()!==this._id?(this.hasChild(e)?console.warn("The given section is already one of the child to this one."):this._children.push(e),!0):(console.warn("A section cannot be the child of itself."),!1)}},{key:"hasChild",value:function(e){if(!this._children)return!1;for(var t=e.getId(),n=0;n<this._children.length;n++)if(this._children[n].getId()===t)return!0;return!1}}]),t}(),p=function(){function e(){n(this,e),this._id=null,this._typename="soma",this._typevalue=1,this._points=[],this._radius=null}return s(e,[{key:"setId",value:function(e){this._id=e}},{key:"getId",value:function(){return this._id}},{key:"addPoint",value:function(e,t,n){this._points.push([e,t,n])}},{key:"getPoints",value:function(){return this._points}},{key:"setRadius",value:function(e){this._radius=e}},{key:"getRadius",value:function(){return this._radius}},{key:"getCenter",value:function(){var e=this._points.length;if(1===e)return this._points[0].slice();if(1<e){for(var t=[0,0,0],n=0;n<e;n++)t[0]+=this._points[n][0],t[1]+=this._points[n][1],t[2]+=this._points[n][2];return t[0]/=e,t[1]/=e,t[2]/=e,t}return null}},{key:"initWithRawSection",value:function(e){return this._id=e.id,this._points=e.points.map(function(e){return e.position}),this._radius=e.radius,this._id}}]),e}(),t=function(){function e(){n(this,e),this._id=null,this._sections={},this._soma=null,this._specialSections={}}return s(e,[{key:"setId",value:function(e){this._id=e}},{key:"getId",value:function(){return this._id}},{key:"buildFromRawMorphology",value:function(e){var t=this;this._soma=new p,this._soma.initWithRawSection(e.soma);for(var n=0;n<e.sections.length;n++){var i=new c,s=i.initWithRawSection(e.sections[n]);this._sections[s]=i}for(var o=0;o<e.sections.length;o++){var u=e.sections[o],a=this._sections[u.id];if(null!==u.parent){var r=this._sections[u.parent];a.setParent(r)}for(var l=u.children.map(function(e){return t._sections[e]}),h=0;h<l.length;h++)a.addChild(l[h])}}},{key:"getNumberOfSections",value:function(){return Object.keys(this._sections)}},{key:"getSection",value:function(e){return e in this._sections?this._sections[e]:null}},{key:"getArrayOfSections",value:function(){return Object.values(this._sections)}},{key:"getSoma",value:function(){return this._soma}},{key:"getOrphanSections",value:function(){var e=0<arguments.length&&void 0!==arguments[0]&&arguments[0];return this._findSpecialSection("orphans",function(e){return!e.getParent()},e),this._specialSections.orphans}},{key:"_findSpecialSection",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]&&arguments[2];if(e in this._specialSections||(this._specialSections[e]=null),n||!this._specialSections[e]){this._specialSections[e]=[];for(var i=Object.values(this._sections),s=0;s<i.length;s++)t(i[s])&&this._specialSections[e].push(i[s])}return this._specialSections[e]}}]),e}();e.Morphology=t,Object.defineProperty(e,"__esModule",{value:!0})});
